[{"D:\\demo\\covid-19-tracker\\src\\index.js":"1","D:\\demo\\covid-19-tracker\\src\\App.js":"2","D:\\demo\\covid-19-tracker\\src\\reportWebVitals.js":"3","D:\\demo\\covid-19-tracker\\src\\components\\Infobox.js":"4","D:\\demo\\covid-19-tracker\\src\\components\\Map.js":"5","D:\\demo\\covid-19-tracker\\src\\components\\Table.js":"6","D:\\demo\\covid-19-tracker\\src\\components\\Linegraph.js":"7","D:\\demo\\covid-19-tracker\\src\\util.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":4367,"mtime":1608598344607,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":836,"mtime":1608598230569,"results":"13","hashOfConfig":"10"},{"size":688,"mtime":1608598437965,"results":"14","hashOfConfig":"10"},{"size":1211,"mtime":1608598293442,"results":"15","hashOfConfig":"10"},{"size":2432,"mtime":1608546584345,"results":"16","hashOfConfig":"10"},{"size":1131,"mtime":1608598567657,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"h4o36c",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\demo\\covid-19-tracker\\src\\index.js",[],["36","37"],"D:\\demo\\covid-19-tracker\\src\\App.js",["38"],"import { FormControl, Select, MenuItem, Card, CardContent } from '@material-ui/core'\nimport { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport './css/App.css';\nimport Infobox from './components/Infobox';\nimport Map from './components/Map'\nimport Table from './components/Table';\nimport Linegraph from './components/Linegraph';\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [selectedcountry, setSelectedCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [sortColumn, setSortColumn] = useState({\n    column: 'cases',\n    isAscend: false\n  });\n  const [mapCenter, setMapCenter] = useState([-27, 133]);\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then(response => response.json())\n      .then(data => setCountryInfo(data))\n      .catch()\n  }, [])\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then(response => response.json())\n        .then(data => {\n          const countries = data.map(country => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n            flag: country.countryInfo.flag\n          }));\n          setCountries(countries);\n          setTableData(_.orderBy(data, [sortColumn.column], [sortColumn.isAscend ? 'asc' : 'desc']));\n          setMapCountries(data)\n        })\n        .catch(ex => console.log(ex.message))\n    };\n\n    getCountriesData();\n  }, [])\n\n  const handleChange = async ({ target }) => {\n    setSelectedCountry(target.value);\n    const url = target.value === 'worldwide'\n      ? 'https://disease.sh/v3/covid-19/all'\n      : 'https://disease.sh/v3/covid-19/countries/' + target.value;\n    await fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(3);\n      })\n      .catch()\n  }\n\n  const handleSort = column => {\n    const sortorder = column === sortColumn.column ? !sortColumn.isAscend : true;\n    setSortColumn({\n      isAscend: sortorder,\n      column\n    });\n\n    const newdata = _.orderBy(tableData, [column], [sortorder ? 'asc' : 'desc']);\n    setTableData(newdata);\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"app_left\">\n        <div className=\"header\">\n          <h1>COVID-19 UPDATE</h1>\n          <FormControl className='app_dropdown'>\n            <Select\n              variant='outlined'\n              value={selectedcountry}\n              onChange={handleChange}>\n              <MenuItem value='worldwide'>Worldwide</MenuItem>\n              {\n                countries.map(country => <MenuItem\n                  key={country.name}\n                  value={country.value}\n                ><img style={{ marginRight: '5px', width: '20px' }} src={country.flag} alt={country.name} />{country.name}</MenuItem>)\n              }\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app_stats\">\n          <Infobox title='Coronavirus Cases' cases={countryInfo.todayCases}\n            total={countryInfo.cases}\n            date={new Date(countryInfo.updated).toDateString()} />\n          <Infobox title='Recovered'\n            cases={countryInfo.todayRecovered}\n            total={countryInfo.recovered}\n            date={new Date(countryInfo.updated).toDateString()} />\n          <Infobox title='Deaths'\n            cases={countryInfo.todayDeaths}\n            total={countryInfo.deaths}\n            date={new Date(countryInfo.updated).toDateString()} />\n        </div>\n        {/* Map */}\n        <Map\n          center={mapCenter}\n          zoom={mapZoom}\n          countries={mapCountries}\n        />\n      </div>\n      <Card className=\"app_right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table\n            countries={tableData}\n            sortColumn={sortColumn}\n            onClick={handleSort}\n          />\n          <h3>Worldwide New Cases</h3>\n          <Linegraph />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\demo\\covid-19-tracker\\src\\reportWebVitals.js",[],"D:\\demo\\covid-19-tracker\\src\\components\\Infobox.js",[],"D:\\demo\\covid-19-tracker\\src\\components\\Map.js",[],"D:\\demo\\covid-19-tracker\\src\\components\\Table.js",[],"D:\\demo\\covid-19-tracker\\src\\components\\Linegraph.js",[],"D:\\demo\\covid-19-tracker\\src\\util.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":48,"column":6,"nodeType":"45","endLine":48,"endColumn":8,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'sortColumn.column' and 'sortColumn.isAscend'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTableData' needs the current value of 'sortColumn.column'.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [sortColumn.column, sortColumn.isAscend]",{"range":"52","text":"53"},[1698,1700],"[sortColumn.column, sortColumn.isAscend]"]